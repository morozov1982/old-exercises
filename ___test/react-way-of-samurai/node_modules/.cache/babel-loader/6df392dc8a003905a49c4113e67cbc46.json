{"ast":null,"code":"var _jsxFileName = \"/home/aleksander/Work/Snippets/___test/react-way-of-samurai/src/components/Profile/Posts/Posts.js\";\nimport React from 'react';\nimport stl from './Posts.module.css';\nimport Post from './Post/Post';\nimport { addPostActionCreator, UPDATE_NEW_POST_TEXT } from './../../../redux/state';\n\nconst Posts = props => {\n  let postsData = props.postsData;\n  let postsElements = postsData.map(p => React.createElement(Post, {\n    likes: p.likes,\n    message: p.message,\n    key: p.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n  let newPostElement = React.createRef();\n\n  let addPost = () => {\n    /* props.addPost();\n    props.dispatch({type: 'ADD-POST'}); */\n    props.dispatch(addPostActionCreator);\n  };\n\n  let onPostChange = () => {\n    let text = newPostElement.current.value;\n    /* props.updateNewPostText(text); */\n\n    /* let action = {type: 'UPDATE-NEW-POST-TEXT', newText: text};\n    props.dispatch(action); */\n\n    props.dispatch();\n  };\n\n  return React.createElement(\"div\", {\n    className: stl.postsBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"My posts\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    onChange: onPostChange,\n    ref: newPostElement,\n    value: props.newPostText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: addPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Add Post\"))), React.createElement(\"div\", {\n    className: stl.posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, postsElements));\n};\n\nexport default Posts; //**************************************************//\n// =======   К О Н С П Е К Т   =====================//\n//**************************************************//\n// <Post likes='' message='' />  -  likes и message - props,\n// передающиеся в компанент Post.js","map":{"version":3,"sources":["/home/aleksander/Work/Snippets/___test/react-way-of-samurai/src/components/Profile/Posts/Posts.js"],"names":["React","stl","Post","addPostActionCreator","UPDATE_NEW_POST_TEXT","Posts","props","postsData","postsElements","map","p","likes","message","id","newPostElement","createRef","addPost","dispatch","onPostChange","text","current","value","postsBlock","newPostText","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,oBAAR,EAA8BC,oBAA9B,QAAyD,wBAAzD;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAEA,MAAIC,aAAa,GAAGD,SAAS,CAACE,GAAV,CAChBC,CAAC,IAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEA,CAAC,CAACC,KAAf;AAAsB,IAAA,OAAO,EAAED,CAAC,CAACE,OAAjC;AAA0C,IAAA,GAAG,EAAEF,CAAC,CAACG,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,CAApB;AAIA,MAAIC,cAAc,GAAGd,KAAK,CAACe,SAAN,EAArB;;AAEA,MAAIC,OAAO,GAAG,MAAM;AAChB;;AAEAV,IAAAA,KAAK,CAACW,QAAN,CAAed,oBAAf;AACH,GAJD;;AAMA,MAAIe,YAAY,GAAG,MAAM;AACrB,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuBC,KAAlC;AAEA;;AACA;;;AAEAf,IAAAA,KAAK,CAACW,QAAN;AACH,GAPD;;AASA,SACI;AAAK,IAAA,SAAS,EAAEhB,GAAG,CAACqB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAU,IAAA,QAAQ,EAAGJ,YAArB;AAAoC,IAAA,GAAG,EAAGJ,cAA1C;AAA2D,IAAA,KAAK,EAAGR,KAAK,CAACiB,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAGP,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAJJ,CAFJ,EAUI;AAAK,IAAA,SAAS,EAAEf,GAAG,CAACuB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMhB,aADN,CAVJ,CADJ;AAgBH,CAzCD;;AA2CA,eAAeH,KAAf,C,CAEA;AACA;AACA;AAEA;AAC4B","sourcesContent":["import React from 'react';\nimport stl from './Posts.module.css';\nimport Post from './Post/Post';\nimport {addPostActionCreator, UPDATE_NEW_POST_TEXT} from './../../../redux/state';\n\nconst Posts = (props) => {\n\n    let postsData = props.postsData;\n\n    let postsElements = postsData.map (\n        p => <Post likes={p.likes} message={p.message} key={p.id} />\n    );\n\n    let newPostElement = React.createRef();\n\n    let addPost = () => {                                                                                   \n        /* props.addPost();\n        props.dispatch({type: 'ADD-POST'}); */\n        props.dispatch(addPostActionCreator);\n    };\n\n    let onPostChange = () => {\n        let text = newPostElement.current.value;\n        \n        /* props.updateNewPostText(text); */\n        /* let action = {type: 'UPDATE-NEW-POST-TEXT', newText: text};\n        props.dispatch(action); */\n        props.dispatch();\n    };\n\n    return (\n        <div className={stl.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea onChange={ onPostChange } ref={ newPostElement } value={ props.newPostText } />\n                </div>\n                <div>\n                    <button onClick={ addPost }>Add Post</button>\n                </div>\n            </div>\n            <div className={stl.posts}>\n                { postsElements }\n            </div>\n        </div>\n    );\n}\n\nexport default Posts;\n\n//**************************************************//\n// =======   К О Н С П Е К Т   =====================//\n//**************************************************//\n\n// <Post likes='' message='' />  -  likes и message - props,\n                            // передающиеся в компанент Post.js"]},"metadata":{},"sourceType":"module"}