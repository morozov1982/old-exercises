{"ast":null,"code":"import React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profilesReducer';\nimport Posts from './Posts';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    postsData: state.profilesPage.postsData,\n    newPostText: state.profilesPage.newPostText\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateNewPostText: text => {\n      dispatch(updateNewPostTextActionCreator(text));\n    },\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    }\n  };\n};\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\nexport default PostsContainer;","map":{"version":3,"sources":["/home/aleksander/Work/Snippets/___test/react-way-of-samurai/src/components/Profile/Posts/PostsContainer.js"],"names":["React","addPostActionCreator","updateNewPostTextActionCreator","Posts","connect","mapStateToProps","state","postsData","profilesPage","newPostText","mapDispatchToProps","dispatch","updateNewPostText","text","addPost","PostsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,EAA8BC,8BAA9B,QAAmE,gCAAnE;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACE,YAAN,CAAmBD,SAD3B;AAEHE,IAAAA,WAAW,EAAEH,KAAK,CAACE,YAAN,CAAmBC;AAF7B,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,iBAAiB,EAAGC,IAAD,IAAU;AACzBF,MAAAA,QAAQ,CAACT,8BAA8B,CAACW,IAAD,CAA/B,CAAR;AACH,KAHE;AAIHC,IAAAA,OAAO,EAAE,MAAM;AACXH,MAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMc,cAAc,GAAGX,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CP,KAA7C,CAAvB;AAEA,eAAeY,cAAf","sourcesContent":["import React from 'react';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profilesReducer';\nimport Posts from './Posts';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        postsData: state.profilesPage.postsData,\n        newPostText: state.profilesPage.newPostText\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewPostText: (text) => {\n            dispatch(updateNewPostTextActionCreator(text));\n        },\n        addPost: () => {\n            dispatch(addPostActionCreator());\n        }\n    }\n};\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default PostsContainer;"]},"metadata":{},"sourceType":"module"}