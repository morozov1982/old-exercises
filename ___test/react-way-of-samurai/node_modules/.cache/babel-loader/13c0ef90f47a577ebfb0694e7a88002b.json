{"ast":null,"code":"var _jsxFileName = \"/home/aleksander/Work/Snippets/___test/react-way-of-samurai/src/App.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\n\nconst App = props => {\n  console.log(props);\n  let dialogsPage = props.state.dialogsPage;\n  let profilesPage = props.state.profilesPage;\n  return React.createElement(\"div\", {\n    className: \"app-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"app-wrapper__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/profile\",\n    render: () => React.createElement(Profile, {\n      profilesPage: profilesPage,\n      addPost: props.addPost,\n      updateNewPostText: props.updateNewPostText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/dialogs\",\n    render: () => React.createElement(Dialogs, {\n      dialogsPage: dialogsPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/news\",\n    component: News,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/music\",\n    component: Music,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/settings\",\n    component: Settings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nexport default App; //**************************************************//\n// =======   К О Н С П Е К Т   =====================//\n//**************************************************//\n// <Route> обязательно оборачивать <BrowserRouter> (см. index.js) \n// <Route path='' component={} />  -  отображать компонент из {},\n//  если в адресной строке ссылка из path=''\n//  exact  -  только если URL точно совпадает","map":{"version":3,"sources":["/home/aleksander/Work/Snippets/___test/react-way-of-samurai/src/App.js"],"names":["React","Route","Header","Navbar","Profile","Dialogs","News","Music","Settings","App","props","console","log","dialogsPage","state","profilesPage","addPost","updateNewPostText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACE,MAAIG,WAAW,GAAGH,KAAK,CAACI,KAAN,CAAYD,WAA9B;AACA,MAAIE,YAAY,GAAGL,KAAK,CAACI,KAAN,CAAYC,YAA/B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,MAAM,EAAG,MAAM,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAEA,YAAvB;AAAqC,MAAA,OAAO,EAAEL,KAAK,CAACM,OAApD;AAA6D,MAAA,iBAAiB,EAAEN,KAAK,CAACO,iBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,MAAM,EAAG,MAAM,oBAAC,OAAD;AAAS,MAAA,WAAW,EAAEJ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAGP,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAGC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAHF,CADF;AAaD,CAlBD;;AAoBA,eAAeC,GAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACsB;AACV","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\n\nconst App = (props) => {\nconsole.log(props);\n  let dialogsPage = props.state.dialogsPage;\n  let profilesPage = props.state.profilesPage;\n\n  return (\n    <div className=\"app-wrapper\">\n      <Header />\n      <Navbar />\n      <div className=\"app-wrapper__content\">\n        <Route path='/profile' render={ () => <Profile profilesPage={profilesPage} addPost={props.addPost} updateNewPostText={props.updateNewPostText} /> } />\n        <Route path='/dialogs' render={ () => <Dialogs dialogsPage={dialogsPage} /> } />\n        <Route path='/news' component={ News } />\n        <Route path='/music' component={ Music } />\n        <Route path='/settings' component={Settings} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n//**************************************************//\n// =======   К О Н С П Е К Т   =====================//\n//**************************************************//\n\n// <Route> обязательно оборачивать <BrowserRouter> (см. index.js) \n// <Route path='' component={} />  -  отображать компонент из {},\n                      //  если в адресной строке ссылка из path=''\n            //  exact  -  только если URL точно совпадает"]},"metadata":{},"sourceType":"module"}