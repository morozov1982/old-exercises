{"ast":null,"code":"var _jsxFileName = \"/home/aleksander/Work/Snippets/___test/react-way-of-samurai/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\n\nconst App = props => {\n  let messages = props.messages;\n  let postsData = props.postsData;\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"app-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"app-wrapper__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/profile\",\n    render: () => React.createElement(Profile, {\n      postsData: postsData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/dialogs\",\n    render: () => React.createElement(Dialogs, {\n      messages: messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/news\",\n    component: News,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/music\",\n    component: Music,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/settings\",\n    component: Settings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n};\n\nexport default App; //**************************************************//\n// =======   К О Н С П Е К Т   =====================//\n//**************************************************//\n// <BrowserRouter>  -  обязательно оборачивать <Route>\n// <Route path='' component={} />  -  отображать компонент из {},\n//  если в адресной строке ссылка из path=''\n//  exact  -  только если URL точно совпадает","map":{"version":3,"sources":["/home/aleksander/Work/Snippets/___test/react-way-of-samurai/src/App.js"],"names":["React","BrowserRouter","Route","Header","Navbar","Profile","Dialogs","News","Music","Settings","App","props","messages","postsData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAuBC,KAAvB,QAAoC,kBAApC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAErB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AACA,MAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;AAEA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,MAAM,EAAG,MAAM,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEA,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,MAAM,EAAG,MAAM,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAED,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAGL,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAGC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAHF,CADF,CADF;AAqBD,CA1BD;;AA4BA,eAAeC,GAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACsB;AACV","sourcesContent":["import React from 'react';\nimport { BrowserRouter,Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\n\nconst App = (props) => {\n\n  let messages = props.messages;\n  let postsData = props.postsData;\n\n  return (\n    <BrowserRouter>\n      <div className=\"app-wrapper\">\n        <Header />\n        <Navbar />\n        <div className=\"app-wrapper__content\">\n          {/* <Route path='/profile' component={ Profile } />\n          <Route path='/dialogs' component={ Dialogs } />\n          <Route path='/news' component={ News } />\n          <Route path='/music' component={ Music } />\n          <Route path='/settings' component={Settings} /> */}\n          \n          <Route path='/profile' render={ () => <Profile postsData={postsData} /> } />\n          <Route path='/dialogs' render={ () => <Dialogs messages={messages} /> } />\n          <Route path='/news' component={ News } />\n          <Route path='/music' component={ Music } />\n          <Route path='/settings' component={Settings} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n//**************************************************//\n// =======   К О Н С П Е К Т   =====================//\n//**************************************************//\n\n// <BrowserRouter>  -  обязательно оборачивать <Route>\n// <Route path='' component={} />  -  отображать компонент из {},\n                      //  если в адресной строке ссылка из path=''\n            //  exact  -  только если URL точно совпадает"]},"metadata":{},"sourceType":"module"}