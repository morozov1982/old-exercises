{"ast":null,"code":"var _jsxFileName = \"/home/aleksander/Work/Snippets/___test/react-way-of-samurai/src/components/Dialogs/Dialogs.js\";\nimport React from \"react\";\nimport stl from \"./Dialogs.module.css\";\nimport DialogsItem from './DialogsItem/DialogsItem';\nimport Message from './Message/Message';\n\nconst Dialogs = props => {\n  let dialogsPage = props.store.getState().dialogsPage;\n  let messages = dialogsPage.messages;\n  let dialogs = dialogsPage.dialogs;\n  let dialogsElements = dialogs.map(d => React.createElement(DialogsItem, {\n    name: d.name,\n    id: d.id,\n    key: d.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n  let messagesElements = messages.map(m => React.createElement(Message, {\n    message: m.message,\n    key: m.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n  let newMessageElement = React.createRef();\n\n  let addMessage = () => {\n    props.addMessage();\n  };\n\n  let onMessageChange = () => {\n    let text = newMessageElement.current.value;\n    props.updateNewMessageBody(text);\n  };\n\n  return React.createElement(\"div\", {\n    className: stl.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: stl.dialogs__items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, dialogsElements), React.createElement(\"div\", {\n    className: stl.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, messagesElements, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    onChange: onMessageChange,\n    ref: newMessageElement,\n    value: dialogsPage.newMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: addMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Add Message\"))));\n};\n\nexport default Dialogs; //**************************************************//\n// =======   К О Н С П Е К Т   =====================//\n//**************************************************//\n// {`${stl.item} ${stl.active}`}  -  если нужно присвоить несколько классов","map":{"version":3,"sources":["/home/aleksander/Work/Snippets/___test/react-way-of-samurai/src/components/Dialogs/Dialogs.js"],"names":["React","stl","DialogsItem","Message","Dialogs","props","dialogsPage","store","getState","messages","dialogs","dialogsElements","map","d","name","id","messagesElements","m","message","newMessageElement","createRef","addMessage","onMessageChange","text","current","value","updateNewMessageBody","dialogs__items","newMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,MAAIC,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBF,WAAzC;AAEA,MAAIG,QAAQ,GAAGH,WAAW,CAACG,QAA3B;AACA,MAAIC,OAAO,GAAGJ,WAAW,CAACI,OAA1B;AAEA,MAAIC,eAAe,GAAGD,OAAO,CAACE,GAAR,CACpBC,CAAC,IAAI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,CAAC,CAACC,IAArB;AAA2B,IAAA,EAAE,EAAED,CAAC,CAACE,EAAjC;AAAqC,IAAA,GAAG,EAAEF,CAAC,CAACE,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,CAAtB;AAIA,MAAIC,gBAAgB,GAAGP,QAAQ,CAACG,GAAT,CACrBK,CAAC,IAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC,OAApB;AAA6B,IAAA,GAAG,EAAED,CAAC,CAACF,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,CAAvB;AAIA,MAAII,iBAAiB,GAAGnB,KAAK,CAACoB,SAAN,EAAxB;;AAEA,MAAIC,UAAU,GAAG,MAAM;AACrBhB,IAAAA,KAAK,CAACgB,UAAN;AACD,GAFD;;AAIA,MAAIC,eAAe,GAAG,MAAM;AAC1B,QAAIC,IAAI,GAAGJ,iBAAiB,CAACK,OAAlB,CAA0BC,KAArC;AACApB,IAAAA,KAAK,CAACqB,oBAAN,CAA2BH,IAA3B;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAEtB,GAAG,CAACS,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAET,GAAG,CAAC0B,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIhB,eADJ,CADF,EAIE;AAAK,IAAA,SAAS,EAAEV,GAAG,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIO,gBADJ,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,QAAQ,EAAGM,eAArB;AAAuC,IAAA,GAAG,EAAGH,iBAA7C;AAAiE,IAAA,KAAK,EAAGb,WAAW,CAACsB,UAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAGP,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CANF,CAJF,CADF;AAiBD,CA3CD;;AA6CA,eAAejB,OAAf,C,CAEA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport stl from \"./Dialogs.module.css\";\nimport DialogsItem from './DialogsItem/DialogsItem';\nimport Message from './Message/Message';\n\nconst Dialogs = (props) => {\n\n  let dialogsPage = props.store.getState().dialogsPage;\n\n  let messages = dialogsPage.messages;\n  let dialogs = dialogsPage.dialogs;\n\n  let dialogsElements = dialogs.map (\n    d => <DialogsItem name={d.name} id={d.id} key={d.id} />\n  );\n\n  let messagesElements = messages.map (\n    m => <Message message={m.message} key={m.id} />\n  );\n\n  let newMessageElement = React.createRef();\n\n  let addMessage = () => {\n    props.addMessage();\n  };\n\n  let onMessageChange = () => {\n    let text = newMessageElement.current.value;\n    props.updateNewMessageBody(text);\n  };\n\n  return (\n    <div className={stl.dialogs}>\n      <div className={stl.dialogs__items}>\n        { dialogsElements }\n      </div>\n      <div className={stl.messages}>\n        { messagesElements }\n      \n        <div>\n          <textarea onChange={ onMessageChange } ref={ newMessageElement } value={ dialogsPage.newMessage } />\n        </div>\n        <div>\n          <button onClick={ addMessage }>Add Message</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n\n//**************************************************//\n// =======   К О Н С П Е К Т   =====================//\n//**************************************************//\n\n// {`${stl.item} ${stl.active}`}  -  если нужно присвоить несколько классов\n"]},"metadata":{},"sourceType":"module"}